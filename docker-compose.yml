version: '3.9'

services:
  postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - .env
    ports:
      - '${POSTGRES_EXTERNAL_PORT:-5432}:${POSTGRES_INTERNAL_PORT:?err}'
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  web:
    container_name: crawler_web
    build: .
    entrypoint: ./web-runner.sh
    env_file:
      - .env
    volumes:
      - ./static:/app/static
    links:
      - postgres:postgres
    expose:
      - "8000"
    depends_on:
      - postgres

  redis:
    image: 'redis:alpine'
    restart: always
    container_name: crawler_redis
    hostname: crawler_redis
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD:?err}
    expose:
      - "6379"
    volumes:
      - redis-data:/data

  celery:
    build: .
    restart: always
    container_name: crawler_celery
    env_file:
      - .env
    command: bash -c "celery -A tasks worker --uid crawlercelery --loglevel INFO --logfile ./static/celery.log"
    volumes:
      - ./static:/app/static
    depends_on:
      - redis
      - web

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: crawler_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

volumes:
  redis-data:
  postgres-data:
